name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-x64:
    runs-on: ubuntu-latest
    name: Build x64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Make build script executable
      run: chmod +x build.sh
    
    - name: Run build script
      run: ./build.sh

  build-arm64:
    runs-on: ubuntu-latest
    name: Build ARM64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup ARM64 cross-compilation environment
      run: |
        set -euxo pipefail

        # Add arm64 architecture once
        sudo dpkg --add-architecture arm64

        sudo rm -f /etc/apt/sources.list
        sudo rm -f /etc/apt/sources.list.d/*    # remove .list
        sudo rm -f /etc/apt/sources.list.d/*.sources

        # Overwrite the default sources to be AMD64-only (host)
        sudo tee /etc/apt/sources.list > /dev/null <<'EOF'
        deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu noble main restricted universe multiverse
        deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu noble-updates main restricted universe multiverse
        deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu noble-backports main restricted universe multiverse
        deb [arch=amd64] http://security.ubuntu.com/ubuntu noble-security main restricted universe multiverse
        EOF

        # Add ARM64 repos from ports.ubuntu.com (including security/updates/backports)
        sudo tee /etc/apt/sources.list.d/arm64.list > /dev/null <<'EOF'
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
        EOF

        # Update indexes (both arches), then install cross toolchains
        sudo apt-get update
        sudo apt-get dist-upgrade -y
        sudo apt-get install -y \
          crossbuild-essential-arm64 \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          pkgconf \
          cmake ninja-build

    - name: Make build script executable
      run: chmod +x build-arm64.sh
    
    - name: Run ARM64 build script
      run: ./build-arm64.sh